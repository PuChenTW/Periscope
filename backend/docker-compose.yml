version: "3.8"

services:
  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_DB: periscope
      POSTGRES_USER: periscope
      POSTGRES_PASSWORD: periscope_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U periscope -d periscope"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.2.1
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  temporal:
    image: temporalio/auto-setup:1.25.2
    ports:
      - "7233:7233"
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=periscope
      - POSTGRES_PWD=periscope_dev
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./temporal-config:/etc/temporal/config/dynamicconfig
    healthcheck:
      test: ["CMD", "tctl", "--address", "temporal:7233", "cluster", "health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  temporal-ui:
    image: temporalio/ui:2.31.2
    ports:
      - "8080:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    depends_on:
      temporal:
        condition: service_healthy

  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE__URL: postgresql+asyncpg://periscope:periscope_dev@postgres:5432/periscope
      REDIS__URL: redis://redis:6379/0
      SECURITY__SECRET_KEY: dev_secret_key_change_in_production
      DEBUG: "true"
      TEMPORAL__SERVER_URL: temporal:7233
      TEMPORAL__NAMESPACE: default
      TEMPORAL__TASK_QUEUE: periscope-digest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      temporal:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn app.main:create_app --host 0.0.0.0 --port 8000 --reload

  worker:
    build: .
    environment:
      DATABASE__URL: postgresql+asyncpg://periscope:periscope_dev@postgres:5432/periscope
      REDIS__URL: redis://redis:6379/0
      SECURITY__SECRET_KEY: dev_secret_key_change_in_production
      DEBUG: "true"
      TEMPORAL__SERVER_URL: temporal:7233
      TEMPORAL__NAMESPACE: default
      TEMPORAL__TASK_QUEUE: periscope-digest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      temporal:
        condition: service_healthy
    volumes:
      - .:/app
    command: uv run python -m app.temporal.worker

volumes:
  postgres_data:
